name: Build and Deploy


concurrency: deploying_app

on:
  push:
    branches: ["develop"]
jobs:
  build-back:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: npm install, build
        run: |
          cd back
          npm install -g @nestjs/cli
          npm install --omit=dev
          npm run build --if-present
          tar -czvf back.tar.gz dist node_modules .env
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact_back
          path: |
             back/back.tar.gz
  build-front:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: npm install, build
        run: |
          cd front
          npm install
          npm run build --if-present -- --mode=production
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact_front
          path: |
              front/dist
  deploy-back:
    runs-on: ubuntu-latest
    environment: develop
    needs: build-back
    steps:
    - name: download artifact
      uses: actions/download-artifact@v4
      with:
        name: artifact_back
        path: back
        
    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ vars.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: back
        target: .
  deploy-front:
    runs-on: ubuntu-latest
    environment: develop
    needs: build-front
    steps:
    - name: download artifact
      uses: actions/download-artifact@v4
      with:
        name: artifact_front
        path: front
        
    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ vars.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: front
        target: .

  reload-services:
    runs-on: ubuntu-latest
    environment: develop
    needs: [deploy-front, deploy-back]
    steps:   
    - name: reload
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          ./reload_app.sh
  

  clean: 
    runs-on: ubuntu-latest
    environment: develop
    if: always()
    needs: [reload-services]
    steps:   
    - name: clean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ vars.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          rm -rf front/ rm -rf back/
